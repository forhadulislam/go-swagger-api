// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetV1UsersHandlerFunc turns a function with the right signature into a get v1 users handler
type GetV1UsersHandlerFunc func(GetV1UsersParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1UsersHandlerFunc) Handle(params GetV1UsersParams) middleware.Responder {
	return fn(params)
}

// GetV1UsersHandler interface for that can handle valid get v1 users params
type GetV1UsersHandler interface {
	Handle(GetV1UsersParams) middleware.Responder
}

// NewGetV1Users creates a new http.Handler for the get v1 users operation
func NewGetV1Users(ctx *middleware.Context, handler GetV1UsersHandler) *GetV1Users {
	return &GetV1Users{Context: ctx, Handler: handler}
}

/*GetV1Users swagger:route GET /v1/users getV1Users

Returns list of all users

Get list of all users
```
GET /api/v1/users


*/
type GetV1Users struct {
	Context *middleware.Context
	Handler GetV1UsersHandler
}

func (o *GetV1Users) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetV1UsersParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
